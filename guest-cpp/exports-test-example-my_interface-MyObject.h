#pragma once
#include <cstdint>
#include <utility>
#include <map>
#include <wit-guest.h>
/* User class definition file, autogenerated once, then user modified
* Updated versions of this file are generated into MyObject.template.
*/
namespace exports {namespace test {namespace example {namespace my_interface {class MyObject : public wit::ResourceExportBase<MyObject>{
            int value;
          public:

          static void Dtor(MyObject* self){delete self;};
          MyObject(uint32_t a) : value(a) {}
          static Owned New(uint32_t a) {return Owned(new MyObject(a));}
          void Set(uint32_t v) { value=v; }
          uint32_t Get() { return value; }
          static int32_t ResourceNew(MyObject* self);
          static MyObject* ResourceRep(int32_t id);
          static void ResourceDrop(int32_t id);
        };

      }}}}
