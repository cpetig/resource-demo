/* User class definition file, autogenerated once, then user modified
 * Updated versions of this file are generated into
 * test-example-my_interface-MyObject.h.template.
 */
#include <iostream>

namespace test {
namespace example {
namespace my_interface {
class MyObject : public my_world::ResourceExportBase<MyObject> {
  uint32_t value;

public:
  MyObject(uint32_t a) : value(a) {}
  void Set(uint32_t v) { value = v; }
  uint32_t Get() { return value; }
  ~MyObject() { std::cout << "drop with value " << value << std::endl; }
  MyObject(MyObject &&b) {
    value = b.value;
    b.value = 0;
  }
  MyObject(const MyObject &) = delete;
  void operator=(MyObject &&b) {
    value = b.value;
    b.value = 0;
  }
  void operator=(const MyObject &) = delete;
};

} // namespace my_interface
} // namespace example
} // namespace test
